/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef CRC_TYPES_H
#define CRC_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* Switch to select one of the available CRC 16-bit (CCITT) calculation methods */
typedef enum
{
	CRC_16_HARDWARE,
	CRC_16_RUNTIME,
	CRC_16_TABLE
} Crc_16ModeType ;

/* Switch to select one of the available CRC 32-bit (IEEE-802.3 CRC32 Ethernet Standard) calculation
 *  methods
 */
typedef enum
{
	CRC_32_HARDWARE,
	CRC_32_RUNTIME,
	CRC_32_TABLE
} Crc_32ModeType ;

/* Switch to select one of the available CRC 8-bit (2Fh polynomial) calculation methods */
typedef enum
{
	CRC_8H2F_HARDWARE,
	CRC_8H2F_RUNTIME,
	CRC_8H2F_TABLE
} Crc_8H2FModeType ;

/* Switch to select one of the available CRC 8-bit (SAE J1850) calculation methods */
typedef enum
{
	CRC_8_HARDWARE,
	CRC_8_RUNTIME,
	CRC_8_TABLE
} Crc_8ModeType ;

/* General configuration of CRC module */
typedef struct Crc_GeneralType_tag
{
	Crc_16ModeType Crc16Mode ;
	Crc_32ModeType Crc32Mode ;
	Crc_8H2FModeType Crc8H2FMode ;
	Crc_8ModeType Crc8Mode ;
} Crc_GeneralType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* CRC_TYPES_H */

