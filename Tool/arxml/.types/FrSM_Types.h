/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef FRSM_TYPES_H
#define FRSM_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* Container for the references to DemEventParameter elements which shall be invoked using the
 *  API Dem_ReportErrorStatus in case the corresponding error occurs. The EventId is taken from
 *  the referenced DemEventParameter's DemEventId value.
 */
typedef struct FrSM_ClusterDemEventParameterRefsType_tag
{
/* Reference to the DemEventParameter which shall be issued when the error "FRSM_E_CLUSTER_STARTUP"
 *  has occured. If the reference is not configured the error shall be reported as DET error.
 */
/* /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter */
	Dem_EventParameterType* FRSM_E_CLUSTER_STARTUP ;
/* Reference to the DemEventParameter which shall be issued when the error "FRSM_E_CLUSTER_SYNC_LOSS"
 *  has occurred. If the reference is not configured the error shall be reported as DET error.
 */
/* /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter */
	Dem_EventParameterType* FRSM_E_CLUSTER_SYNC_LOSS ;
} FrSM_ClusterDemEventParameterRefsType ;

/* This container specifies a FlexRay cluster and all related data. A FlexRay cluster may consist
 *  of more than one controller per ECU.
 */
typedef struct FrSM_ClusterType_tag
{
/* The standardized errors are provided in this container and can be extended by vendor specific
 *  error references.
 */
	FrSM_ClusterDemEventParameterRefsType* FrSMClusterDemEventParameterRefs ;
/* If FrSMCheckWakeupReason  is true, the FrSM will check the wakeup reason in order to skip the
 *  wakeup in case of wakeup by bus. If FrSMCheckWakeupReason  is false, the FrSM will always try
 *  to perform a wakeup.
 */
	boolean FrSMCheckWakeupReason ;
/* If true, timer t1 shall be started instead of immediately calling FrIf_AllowColdstart in case
 *  of a startup without wakeup.
 */
	boolean FrSMDelayStartupWithoutWakeup ;
/* A value of 0 shall imply that the timer is not used. */
/* The duration of timer t1 in seconds. */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 FrSMDurationT1 ;
/* A value of 0 shall imply that the timer is not used. The value of this parameter shall be larger
 *  than the value of FrSMDurationT1 parameter.
 */
/* The duration of timer t2 in seconds. */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 FrSMDurationT2 ;
/* A value of 0 shall imply that the timer is not used. It shall only be possible to configure
 *  a value 0 if no FrNm is used.
 */
/* The duration of timer t3 in seconds. The value of this parameter shall be larger than the value
 *  of FrSMDurationT1 parameter.
 */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 FrSMDurationT3 ;
/* False: The ECU is no coldstart node for this FlexRay cluster. */
/* True: The ECU is a coldstart node for this FlexRay cluster. */
	boolean FrSMIsColdstartEcu ;
/* False: FrSM shall never perform a wakeup for this FlexRay cluster. */
/* True: FrSM shall perform a wakeup for this cluster. */
	boolean FrSMIsWakeupEcu ;
/* This parameter defines the cycle time in seconds of the periodic calling of FrSM main function. */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 FrSMMainFunctionCycleTime ;
/* This parameter defines the number of coldstarter that should not be underrun. If this parameter
 *  is not configured the mainfunction shall not check the number of startup frames.
 */
	uint8 FrSMMinNumberOfColdstarter ;
/* Maximum number of Wakeup Patterns the node may send before going to FRSM_STARTUP. */
	uint16 FrSMNumWakeupPatterns ;
/* The number of times an ECU may repeat the startup procedure for a FlexRay cluster. */
	uint16 FrSMStartupRepetitions ;
/* The number of times an ECU may repeat the startup procedure including a wakeup for a FlexRay
 *  cluster.
 */
	uint16 FrSMStartupRepetitionsWithWakeup ;
/* Reference to the unique handle to identify one certain FlexRay network correspond to one of
 *  the network handles of the ComM configuration.
 */
/* /AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel */
	ComM_ChannelType* FrSMComMNetworkHandleRef ;
/* References the cluster configuration in the FlexRay Interface configuration. */
/* Note that the assigned controllers and transceivers are defined in the FrIf configuration and
 *  can be accessed via this reference.
 */
/* /AUTOSAR/EcucDefs/FrIf/FrIfConfig/FrIfCluster */
	FrIf_ClusterType* FrSMFrIfClusterRef ;
} FrSM_ClusterType ;

/* Name of <Cdd>_SyncLossErrorIndication function that shall be called on loss of synchronization.
 *  If this parameter is omitted no indication shall take place.
 */
/* TODO: 
 * typedef void (*FrSM_SyncLossErrorIndicationNameType)(void);
 */

/* This container comprises the cluster specific configuration of the FlexRay State Manager. */
typedef struct FrSM_ConfigType_tag
{
	FrSM_ClusterType* FrSMCluster ;
} FrSM_ConfigType ;

/* This container contains the general configuration parameters of the FlexRay State Manager. */
typedef struct FrSM_GeneralType_tag
{
/* notification mechanism. */
/* Enables and disables the development error detection and */
	boolean FrSMDevErrorDetect ;
	FrSM_SyncLossErrorIndicationNameType FrSMSyncLossErrorIndicationName ;
/* Enables and disables the version info API */
	boolean FrSMVersionInfoApi ;
} FrSM_GeneralType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* FRSM_TYPES_H */

