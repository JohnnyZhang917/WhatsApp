/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef J1939TP_TYPES_H
#define J1939TP_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* Container for the references to DemEventParameter elements which shall be passed to the API
 *  Dem_ReportErrorStatus. The EventId is taken from the referenced DemEventParameter's DemEventId
 *  value.
 */
typedef struct J1939Tp_DemEventParameterRefsType_tag
{
/* Reference to the DemEventParameter which shall be issued after successful or unsuccessful communication.
 */
/* /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter */
	Dem_EventParameterType* J1939TP_E_COMMUNICATION ;
} J1939Tp_DemEventParameterRefsType ;

/* This N-PDU represents the TP.CM frame of a J1939 transport protocol session. TP.CM is used both
 *  by BAM and CMDT to initialize the connection. For CMDT, it is also used to abort the connection.
 */
typedef struct J1939Tp_RxCmNPduType_tag
{
/* The N-PDU identifier used for communication with CanIf. */
	uint16 J1939TpRxCmNPduId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpRxCmNPduRef ;
} J1939Tp_RxCmNPduType ;

/* This N-PDU represents the TP.DT frame of a J1939 transport protocol session. TP.DT is used both
 *  by BAM and CMDT to transfer the contents of an N-SDU.
 */
typedef struct J1939Tp_RxDtNPduType_tag
{
/* The N-PDU identifier used for communication with CanIf. */
	uint16 J1939TpRxDtNPduId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpRxDtNPduRef ;
} J1939Tp_RxDtNPduType ;

/* This N-PDU represents the short frame that is used for a dynamic length PGN when it has a length
 *  of less that 8 bytes.
 */
typedef struct J1939Tp_RxDirectNPduType_tag
{
/* The N-PDU identifier used for communication with CanIf. */
	uint16 J1939TpRxDirectNPduId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpRxDirectNPduRef ;
} J1939Tp_RxDirectNPduType ;

/* This container describes the parameters that are relevant for the reception of a specific N-SDU. */
typedef struct J1939Tp_RxNSduType_tag
{
/* Reference to the Pdu object representing the N-SDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpRxNSduRef ;
} J1939Tp_RxNSduType ;

typedef struct J1939Tp_RxPgType_tag
{
/* <b>Please note:</b> This sub container is only necessary when J1939TpRxPgDynLength is TRUE. */
	J1939Tp_RxDirectNPduType* J1939TpRxDirectNPdu ;
	J1939Tp_RxNSduType* J1939TpRxNSdu ;
/* <b>Please note:</b> When this attribute is TRUE, the sub container J1939TpRxDirectNPdu is required.
 */
/* This flag is set to TRUE when the N-SDU refers to a PGN with variable length. */
	boolean J1939TpRxPgDynLength ;
/* Defines the PGN which is represented by the N-SDU. */
	uint32 J1939TpRxPgPGN ;
} J1939Tp_RxPgType ;

/* This N-PDU represents the TP.CM frame that is used in reverse direction for a J1939 transport
 *  protocol session using the CMDT protocol type. TP.CM in reverse direction is used for intermediate
 *  and final acknowledgement of received data and to abort the connection.
 */
typedef struct J1939Tp_TxFcNPduType_tag
{
/* The N-PDU identifier used for Tx confirmation from CanIf. */
	uint16 J1939TpTxFcNPduTxConfId ;
/* Reference to the Pdu object representing the N-PDU. */
/* <b>Please note:</b> When two channels have identical but exchanged source and destination addresses,
 *  the Pdu referenced by this parameter is shared with J1939TpTxCmNPduRef of the corresponding
 *  J1939TpTxChannel.
 */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpTxFcNPduRef ;
} J1939Tp_TxFcNPduType ;

/* Protocol type of the referencing connection, which is either BAM or CMDT. */
typedef enum
{
	J1939TP_PROTOCOL_BAM,
	J1939TP_PROTOCOL_CMDT
} J1939Tp_RxProtocolTypeType ;

/* This container describes a reception channel of the J1939Tp module. One channel is used for
 *  all N-SDUs that share the same source address (SA) and the same destination address (BAM: DA
 *  = 0xFF, CMDT: DA != 0xFF).
 */
typedef struct J1939Tp_RxChannelType_tag
{
	J1939Tp_RxCmNPduType* J1939TpRxCmNPdu ;
	J1939Tp_RxDtNPduType* J1939TpRxDtNPdu ;
	J1939Tp_RxPgType* J1939TpRxPg ;
/* <b>Please note:</b> This sub container is only required when J1939TpRxProtocolType is J1939TP_PROTOCOL_CMDT.
 */
	J1939Tp_TxFcNPduType* J1939TpTxFcNPdu ;
/* <b>Please note:</b> The protocol type is determined at configuration time by the PDU format
 *  of the PGN of an N-SDU: If the first byte of the PGN is smaller than 0xF0, CMDT will be used,
 *  otherwise BAM.
 */
	J1939Tp_RxProtocolTypeType J1939TpRxProtocolType ;
} J1939Tp_RxChannelType ;

/* This N-PDU represents the TP.CM frame that is used in reverse direction for a J1939 transport
 *  protocol session using the CMDT protocol type. TP.CM in reverse direction is used for intermediate
 *  and final acknowledgement of received data and to abort the connection.
 */
typedef struct J1939Tp_RxFcNPduType_tag
{
/* The N-PDU identifier used for communication with CanIf. */
	uint16 J1939TpRxFcNPduId ;
/* Reference to the Pdu object representing the N-PDU. */
/* <b>Please note:</b> When two channels have identical but exchanged source and destination addresses,
 *  the Pdu referenced by this parameter is shared with J1939TpRxCmNPduRef of the corresponding
 *  J1939TpRxChannel.
 */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpRxFcNPduRef ;
} J1939Tp_RxFcNPduType ;

/* This N-PDU represents the TP.CM frame of a J1939 transport protocol session. TP.CM is used both
 *  by BAM and CMDT to initialize the connection. For CMDT, it is also used to abort the connection.
 */
typedef struct J1939Tp_TxCmNPduType_tag
{
/* The N-PDU identifier used for Tx confirmation from CanIf. */
	uint16 J1939TpTxCmNPduTxConfId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpTxCmNPduRef ;
} J1939Tp_TxCmNPduType ;

/* This N-PDU represents the TP.DT frame of a J1939 transport protocol session. TP.DT is used both
 *  by BAM and CMDT to transfer the contents of an N-SDU.
 */
typedef struct J1939Tp_TxDtNPduType_tag
{
/* The N-PDU identifier used for Tx confirmation from CanIf. */
	uint16 J1939TpTxDtNPduTxConfId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpTxDtNPduRef ;
} J1939Tp_TxDtNPduType ;

/* This N-PDU represents the short frame that is used for a dynamic length PGN when it has a length
 *  of less that 8 bytes.
 */
typedef struct J1939Tp_TxDirectNPduType_tag
{
/* The N-PDU identifier used for Tx confirmation from CanIf. */
	uint16 J1939TpTxDirectNPduTxConfId ;
/* Reference to the Pdu object representing the N-PDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpTxDirectNPduRef ;
} J1939Tp_TxDirectNPduType ;

/* This container describes the parameters that are relevant for the transmission of a specific
 *  N-SDU.
 */
typedef struct J1939Tp_TxNSduType_tag
{
/* The N-SDU identifier used for communication with PduR. */
	uint16 J1939TpTxNSduId ;
/* Reference to the Pdu object representing the N-SDU. */
/* /AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu */
	EcuC_PduType* J1939TpTxNSduRef ;
} J1939Tp_TxNSduType ;

typedef struct J1939Tp_TxPgType_tag
{
/* <b>Please note:</b> This sub container is only necessary when J1939TpTxPgDynLength is TRUE. */
	J1939Tp_TxDirectNPduType* J1939TpTxDirectNPdu ;
	J1939Tp_TxNSduType* J1939TpTxNSdu ;
/* <b>Please note:</b> When this attribute is TRUE, the sub container J1939TpTxDirectNPdu is required.
 */
/* This flag is set to TRUE when the N-SDU refers to a PGN with variable length. */
	boolean J1939TpTxPgDynLength ;
/* Defines the PGN which is represented by the N-SDU. */
	uint32 J1939TpTxPgPGN ;
} J1939Tp_TxPgType ;

/* Protocol type of the referencing connection, which is either BAM or CMDT. */
typedef enum
{
	J1939TP_PROTOCOL_BAM,
	J1939TP_PROTOCOL_CMDT
} J1939Tp_TxProtocolTypeType ;

/* This container describes a transmission channel of the J1939Tp module. One channel is used for
 *  all N-SDUs that share the same source address (SA) and the same destination address (BAM: DA
 *  = 0xFF, CMDT: DA != 0xFF).
 */
typedef struct J1939Tp_TxChannelType_tag
{
/* <b>Please note:</b> This sub container is only required when J1939TpRxProtocolType is J1939TP_PROTOCOL_CMDT.
 */
	J1939Tp_RxFcNPduType* J1939TpRxFcNPdu ;
	J1939Tp_TxCmNPduType* J1939TpTxCmNPdu ;
	J1939Tp_TxDtNPduType* J1939TpTxDtNPdu ;
	J1939Tp_TxPgType* J1939TpTxPg ;
/* <b>Please note:</b> The protocol type is determined at configuration time by the PDU format
 *  of the PGN of an N-SDU: If the first byte of the PGN is smaller than 0xF0, CMDT will be used,
 *  otherwise BAM.
 */
	J1939Tp_TxProtocolTypeType J1939TpTxProtocolType ;
} J1939Tp_TxChannelType ;

/* This container contains the configuration parameters and sub containers of the J1939Tp module
 *  that define the communication paths. This container is a MultipleConfigurationContainer, i.e.
 *  this container and its sub-containers exist once per configuration set.
 */
typedef struct J1939Tp_ConfigurationType_tag
{
/* The standardized errors are provided in the container and can be extended by vendor specific
 *  error references.
 */
	J1939Tp_DemEventParameterRefsType* J1939TpDemEventParameterRefs ;
	J1939Tp_RxChannelType* J1939TpRxChannel ;
	J1939Tp_TxChannelType* J1939TpTxChannel ;
} J1939Tp_ConfigurationType ;

/* This container describes the general configuration parameters of the J1939Tp  module. */
typedef struct J1939Tp_GeneralType_tag
{
/* Switches the Development Error Detection and Notification. */
	boolean J1939TpDevErrorDetect ;
/* <b>Please note:</b> This configuration value shall be equal to the value in the ScheduleManager
 *  module.
 */
/* Allow to configure the time for the MainFunction (in seconds). */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 J1939TpMainFunctionPeriod ;
/* Maximum number of N-PDUs the J1939Tp shall send before waiting for an authorization to continue
 *  transmission of the following TP.DT frames. This parameter is only relevant the transmission
 *  of messages via CMDT. For further details on this parameter value see SAE J1939/21.
 */
	uint8 J1939TpMaxPacketsPerBlock ;
/* Number of N-PDUs the J1939Tp module allows the sender to send before waiting for an authorization
 *  to continue transmission of the following TP.DT frames. This parameter is only relevant for
 *  reception of messages via CMDT. For further details on this parameter value see SAE J1939/21.
 */
	uint8 J1939TpPacketsPerBlock ;
/* <b>Please note:</b> The Tx confirmation timeout should be set to a value that enabled detection
 *  of a lost Tx confirmation in time, and that ensures that normal transmission delay caused by
 *  lower message priority does not lead to an error.
 */
/* Timeout in seconds for the CanIf Tx confirmation. After this time the J1939Tp assumes that an
 *  N-PDU could not be transmitted.
 */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 J1939TpTxConfTimeout ;
/* The function J1939Tp_GetVersionInfo is configurable (On/Off) by this configuration parameter. */
	boolean J1939TpVersionInfoApi ;
} J1939Tp_GeneralType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* J1939TP_TYPES_H */

