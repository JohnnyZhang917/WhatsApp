/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef FEE_TYPES_H
#define FEE_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* Mapped to the job end notification routine provided by the upper layer module (NvM_JobEndNotification).
 */
/* TODO: 
 * typedef void (*Fee_NvmJobEndNotificationType)(void);
 */

/* Mapped to the job error notification routine provided by the upper layer module (NvM_JobErrorNotification).
 */
/* TODO: 
 * typedef void (*Fee_NvmJobErrorNotificationType)(void);
 */

/* Configuration of block specific parameters for the Flash EEPROM Emulation module. */
typedef struct Fee_BlockConfigurationType_tag
{
/* 0x0000 and 0xFFFF shall not be used for block numbers (see FEE006).
 * 
 *                                         Range: 
 *                                         min = 2^NVM_DATASET_SELECTION_BITS 
 *                                         max = 0xFFFF -2^NVM_DATASET_SELECTION_BITS
 * 
 *                                         Note: Depending on the number of bits set aside for
 *  dataset selection several other block numbers shall also be left out to ease implementation.
 */
/* Block identifier (handle). */
	uint16 FeeBlockNumber ;
/* Size of a logical block in bytes. */
	uint16 FeeBlockSize ;
/* true: 	Block contains immediate data.
 *                                         false:	Block does not contain immediate data.
 */
/* Marker for high priority data. */
	boolean FeeImmediateData ;
/* Number of write cycles required for this block. */
	uint32 FeeNumberOfWriteCycles ;
/* Device index (handle). */
/* Range: 0 .. 254 (0xFF reserved for broadcast call to GetStatus function). */
/* /AUTOSAR/EcucDefs/Fls/FlsGeneral */
	Fls_GeneralType* FeeDeviceIndex ;
} Fee_BlockConfigurationType ;

/* Container for general parameters. These parameters are not specific to a block. */
typedef struct Fee_GeneralType_tag
{
/* true:	Development error detection enabled.
 *                                         false:	Development error detection disabled.
 */
/* Pre-processor switch to enable and disable development error detection. */
	boolean FeeDevErrorDetect ;
/* Specifies the InstanceId of this module instance. If only one instance is present it shall have
 *  the Id 0.
 */
	uint8 FeeIndex ;
	Fee_NvmJobEndNotificationType FeeNvmJobEndNotification ;
	Fee_NvmJobErrorNotificationType FeeNvmJobErrorNotification ;
/* true:	Polling mode enabled, callback functions (provided to FLS module) disabled.
 * 
 *                                         false:	Polling mode disabled, callback functions (provided
 *  to FLS module) enabled.
 */
/* Pre-processor switch to enable and disable the polling mode for this module. */
	boolean FeePollingMode ;
/* TRUE: SetMode functionality supported / code present, 
 *                                         FALSE: SetMode functionality not supported / code not
 *  present. 
 * 
 *                                         Note: 
 *                                         This configuration setting has to be consistent with
 *  that of all 
 *                                         underlying flash device drivers (configuration parameter
 *  FlsSetModeApi).
 */
/* Compiler switch to enable/disable the 'SetMode' functionality of the FEE module. */
	boolean FeeSetModeSupported ;
/* true:	Version info API enabled.
 *                                         false:	Version info API disabled.
 */
/* Pre-processor switch to enable / disable the API to read out the modules version information. */
	boolean FeeVersionInfoApi ;
/* The size in bytes to which logical blocks shall be aligned. */
	uint16 FeeVirtualPageSize ;
} Fee_GeneralType ;

/* Additional published parameters not covered by CommonPublishedInformation container. */
typedef struct Fee_PublishedInformationType_tag
{
/* Note: If the management overhead depends on the block size or block location a formula has to
 *  be provided that allows the configurator to calculate the management overhead correctly.
 */
/* Management overhead per logical block in bytes. */
	uint16 FeeBlockOverhead ;
/* Note: Internal operations in that case means operations that are not explicitly invoked from
 *  the upper layer module but need to be handled for proper operation of this module or the underlying
 *  memory driver.
 */
/* The maximum time the FEE module's API routines shall be blocked (delayed) by internal operations. */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 FeeMaximumBlockingTime ;
/* Note: If the management overhead depends on the block size or block location a formula has to
 *  be provided that allows the configurator to calculate the management overhead correctly.
 */
/* Management overhead per page in bytes. */
	uint16 FeePageOverhead ;
} Fee_PublishedInformationType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* FEE_TYPES_H */

