/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef LINTRCV_TYPES_H
#define LINTRCV_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* Container gives LIN transceiver driver access about a single LIN transceiver channel. */
typedef struct LinTrcv_AccessType_tag
{
} LinTrcv_AccessType ;

/* State of LIN transceiver after call to LinTrcv_Init. */
typedef enum
{
	LINTRCV_TRCV_MODE_NORMAL,
	LINTRCV_TRCV_MODE_SLEEP,
	LINTRCV_TRCV_MODE_STANDBY
} LinTrcv_InitStateType ;

/* Container gives LIN transceiver driver information about a single LIN transceiver channel. Any
 *  LIN transceiver driver has such LIN transceiver channels.
 */
typedef struct LinTrcv_ChannelType_tag
{
	LinTrcv_AccessType* LinTrcvAccess ;
/* Unique identifier of the LIN Transceiver Channel. */
	uint8 LinTrcvChannelId ;
/* True: Is used
                                        False Is not used */
/* Shall the related LIN transceiver channel be used? */
	boolean LinTrcvChannelUsed ;
	LinTrcv_InitStateType LinTrcvInitState ;
/* TRUE = Is used. 
                                        FALSE = Is not used. */
/* Is wake up by bus supported? If LIN transceiver hardware does not support wake up by bus value
 *  is always FALSE. If LIN transceiver hardware supports wake up by bus value is TRUE or FALSE
 *  depending whether it is used or not.
 */
	boolean LinTrcvWakeupByBusUsed ;
/* Reference to the IcuChannel to enable/disable the interrupts for wakeups. */
/* /AUTOSAR/EcucDefs/Icu/IcuConfigSet/IcuChannel */
	Icu_ChannelType* LinTrcvIcuChannelRef ;
/* Reference to a wakeup source in the EcuM configuration. This reference is only needed if LinTrcvWakeupByBusUsed
 *  is true. Implementation Type: reference to EcuM_WakeupSourceType.
 */
/* /AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource */
	EcuM_WakeupSourceType* LinTrcvWakeupSourceRef ;
} LinTrcv_ChannelType ;

/* Container gives LIN transceiver driver basic information. */
typedef struct LinTrcv_GeneralType_tag
{
/* True: Is used
                                        False: Is not used */
/* Switches development error detection and notification on and off. If switched on, #define LINTRCV_DEV_ERROR_DETECT
 *  ON shall be generated. If switched off, #define LINTRCV_DEV_ERROR_DETECT OFF shall be generated.
 *  Define shall be part of file LinTrcv_Cfg.h.
 */
	boolean LinTrcvDevErrorDetect ;
/* True: Is used
                                        False: Is not used */
/* Switches version information API on and off. If switched off, function need not be present in
 *  compiled code.
 */
	boolean LinTrcvGetVersionInfo ;
/* Specifies the InstanceId of this module instance. If only one instance is present it shall have
 *  the Id 0.
 */
	uint8 LinTrcvIndex ;
/* Wait count for transceiver state changes. */
	uint32 LinTrcvWaitCount ;
/* True: Is used
                                        False: Is not used */
/* Informs whether wake up is supported or not. In case wake up is not supported by LIN transceiver
 *  hardware the setting shall be false. The wake up ability may be switched on or off for each
 *  channel of one LIN transceiver by LinTrcvWakeupSourceRef.
 */
	boolean LinTrcvWakeUpSupport ;
} LinTrcv_GeneralType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* LINTRCV_TYPES_H */

