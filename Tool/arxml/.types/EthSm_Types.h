/**
 * WhatsApp - the open source AUTOSAR platform https://github.com/parai
 *
 * Copyright (C) 2014  WhatsApp <parai@foxmail.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * Version: AUTOSAR 4.2.0
 * Generated by arxml.py
 */
#ifndef ETHSM_TYPES_H
#define ETHSM_TYPES_H

/* ============================ [ INCLUDES  ] ====================================================== */
#include "Std_Types.h"
#ifdef __cplusplus
namespace autosar {
extern "C" {
#endif
/* ============================ [ MACROS    ] ====================================================== */
/* ============================ [ TYPES     ] ====================================================== */
/* This container contains the global parameter of the Ethernet State Manager. */
typedef struct EthSm_GeneralType_tag
{
/* Enables and disables the development errer detection and notification mechanism. */
	boolean EthSmDevErrorDetect ;
/* Disables the API to the EthIf. The API to the ComM is available but the functionality is deactivated.
 *  The function calls from the ComM will be answered with the return value E_OK.
 */
	boolean EthSmDummyMode ;
/* Specifies the period in seconds that the MainFunction has to be triggered with. */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 EthSmMainFunctionPeriod ;
/* Enables and disables the version info API. */
	boolean EthSmVersionInfoApi ;
} EthSm_GeneralType ;

/* This container contains the Ethernet network-specific parameters of each Ethernet network. It
 *  also contains the controller and transceiver IDs assigned to a Ethernet network.
 */
typedef struct EthSm_NetworkType_tag
{
/* EthIf_ControllerInit
 *                                         EthIf_TransceiverInit
 *                                         EthIf_SetControllerMode
 *                                         EthIf_SetTransceiverMode
 */
/* Timeout in seconds for the calls to EthIf: */
/* in fact, it should be type <float> according to arxml, but only supported in tool side*/
	uint64 EthSmConfirmationTimeout ;
/* Unique handle to identify one certain Ethernet network. Reference to one of the network handles
 *  configured for the ComM.
 */
/* /AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel */
	ComM_ChannelType* EthSMComMNetworkHandleRef ;
/* ID of the Ethernet controller assigned to the configured network handle. Reference to one of
 *  the controllers of Eth configuration.
 */
/* /AUTOSAR/EcucDefs/Eth/EthConfigSet/EthCtrlConfig */
	Eth_CtrlConfigType* EthSmControllerId ;
/* ID of the ethernet transceiver assigned to the configured network handle. Reference to one of
 *  the transceivers of EthTrcv configuration.
 */
/* /AUTOSAR/EcucDefs/EthTrcv/EthTrcvConfigSet/EthTrcvConfig */
	EthTrcv_ConfigType* EthSmTransceiverId ;
} EthSm_NetworkType ;

/* ============================ [ DATAS     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifdef __cplusplus
}}  /* name space */
#endif
#endif /* ETHSM_TYPES_H */

